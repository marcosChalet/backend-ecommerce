generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RelatedProducts {
  id           Int      @id @default(autoincrement())
  product      Product  @relation(fields: [product_id], references: [id])
  product_id   Int
  created_date DateTime @default(now())
  updated_date DateTime @updatedAt
}

model OurProducts {
  id           Int      @id @default(autoincrement())
  product      Product  @relation(fields: [product_id], references: [id])
  product_id   Int
  created_date DateTime @default(now())
  updated_date DateTime @updatedAt
}

model Product {
  id                Int               @id @default(autoincrement())
  name              String            @db.VarChar(50)
  sku               String            @db.VarChar(20)
  category          Category          @relation(fields: [category_id], references: [id])
  category_id       Int
  sizes             Size[]            @relation("ProductSize")
  colors            Color[]           @relation("ProductColor")
  description       String            @db.VarChar(250)
  large_description String            @db.VarChar(1000)
  price             Decimal
  discount_price    Decimal?
  discount_percent  Decimal?
  is_new            Boolean?
  image_link        String?           @db.VarChar(250)
  other_images_link String?           @db.VarChar(1000)
  created_date      DateTime          @default(now())
  updated_date      DateTime          @updatedAt
  OurProducts       OurProducts[]
  RelatedProducts   RelatedProducts[]
}

model Size {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(10)
  products     Product[] @relation("ProductSize")
  created_date DateTime  @default(now())
  updated_date DateTime  @updatedAt
}

model Color {
  id           Int       @id @default(autoincrement())
  color_hex    String    @db.VarChar(10)
  products     Product[] @relation("ProductColor")
  created_date DateTime  @default(now())
  updated_date DateTime  @updatedAt
}

model Category {
  id           Int       @id @default(autoincrement())
  products     Product[]
  name         String    @db.VarChar(50)
  image_link   String?   @db.VarChar(250)
  created_date DateTime  @default(now())
  updated_date DateTime  @updatedAt
}
