services:
  db-service:
    image: postgres:15.5-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
      - POSTGRES_PORT=5432
      - TZ=America/Fortaleza
    networks:
      - db-net
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'
      interval: 10s
      timeout: 5s
      retries: 5
    command: ['postgres', '-c', 'log_statement=all']
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1GB

  api01: &api-common
    restart: always
    build:
      context: .
    ports:
      - '2000'
    environment:
      - DATABASE_URL=postgresql://user:password@db-service:5432/db?connection_limit=18
      - NPM_RUN_COMMAND=npm run start:migrate:dev
      - EMAIL_FROM=myemail@gmail.com
      - EMAIL_PASSWORD=labc2abc3abc4abc
    networks:
      - db-net
      - app-net
    depends_on:
      - db-service
    deploy:
      resources:
        limits:
          cpus: 0.4
          memory: 800M

  api02:
    <<: *api-common

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - '2001:2001'
    networks:
      - app-net
    deploy:
      resources:
        limits:
          cpus: 0.2
          memory: 400M

networks:
  db-net:
  app-net:

volumes:
  pg-data:
    driver: local
